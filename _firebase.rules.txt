rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  	match /users/{userId} {
    	allow read: if isSignedIn();
      allow update, create: if request.auth.uid == userId;
      match /photos/{document=**} {
      	allow read: if isSignedIn();
        allow write: if request.auth.uid == userId;
      }
    }
    match /following/{userId}/{document=**} {
      allow read: if isSignedIn();
      allow write: if request.auth.uid == userId;
      allow update: if resource.id == request.auth.uid;
    }
    match /events/{document=**} {
    	allow read, list;
    	allow update : if isHost();
      allow update: if isSignedIn() && updateAttendeeFieldsOnly();
      allow create: if isSignedIn;
    }
  }
}

function isSignedIn() {
	return request.auth.uid != null;
}

function isHost () {
	return isSignedIn() && resource.data.hostUid == request.auth.uid;
}

function updateAttendeeFieldsOnly() {
	return incomingData().diff(existingData()).changedKeys().hasOnly(['attendeesIds', 'attendees']);
}

function existingData() {
	return resource.data;
}

function incomingData() {
	return request.resource.data;
}
